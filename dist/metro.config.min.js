"use strict";function ownKeys(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})),t.push.apply(t,n)}return t}function _objectSpread(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(t,!0).forEach(function(e){_defineProperty(r,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))})}return r}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var _require=require("@react-native/metro-config"),getDefaultConfig=_require.getDefaultConfig,mergeConfig=_require.mergeConfig,defaultConfig=getDefaultConfig(__dirname),config={transformer:{getTransformOptions:function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",{transform:{experimentalImportSupport:!1,inlineRequires:!0}});case 1:case"end":return e.stop()}})}},resolver:{extraNodeModules:_objectSpread({},require("node-libs-react-native"))}};module.exports=mergeConfig(defaultConfig,config);
//# sourceMappingURL=metro.config.min.js.map
